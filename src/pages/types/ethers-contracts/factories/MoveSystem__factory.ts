/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MoveSystem, MoveSystemInterface } from "../MoveSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001cd638038062001cd68339810160408190526200003991620001e1565b818162000046336200014e565b6001600160a01b038116156200005d5780620000c2565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c2919062000220565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505062000247565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001de57600080fd5b50565b60008060408385031215620001f557600080fd5b82516200020281620001c8565b60208401519092506200021581620001c8565b809150509250929050565b6000602082840312156200023357600080fd5b81516200024081620001c8565b9392505050565b611a7f80620002576000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f3660046113ed565b6100cf565b60405161007191906114db565b60405180910390f35b6100826100ee565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b53660046114fd565b610133565b6100cd6100c836600461153e565b6107e9565b005b60606100e8828060200190518101906100b59190611574565b92915050565b600061012e7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091339161017c9073ffffffffffffffffffffffffffffffffffffffff167f035372a84ed8a55d8457eb5799995a6c576105567e7fe094f6b26cf611c70afd610865565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e91906115a9565b610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616e6e6f74206d6f766500000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102bd9073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610865565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018590529091506103589073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190611574565b866109b1565b60030b6001146103c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f63616e206f6e6c79206d6f766520746f2061646a6163656e74207370616365736044820152606401610270565b600080546104089073ffffffffffffffffffffffffffffffffffffffff167fce3cf5e60d6c466c18a0c94c2578092629e99bd45d1ae7462b45c6a485bc1150610865565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906115a9565b15610501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f63616e6e6f74206d6f766520647572696e6720616e20656e636f756e746572006044820152606401610270565b600080546105459073ffffffffffffffffffffffffffffffffffffffff167f26cf7dc75ae68c708d2e4d32efa853730b92b0bf86104963fae257250466fa25610865565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105d591908101906115e4565b80518851919250906105e89082906116dd565b6105f2919061174e565b60030b87526020808201519088015161060c9082906116dd565b610616919061174e565b60030b60208801526001546106419073ffffffffffffffffffffffffffffffffffffffff1688610a45565b51156106a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f74686973207370616365206973206f62737472756374656400000000000000006044820152606401610270565b6040517fdcb14c2f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063dcb14c2f906106fd9088908b90600401611770565b600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050506107398588610c4b565b156107df57600060026000815461074f90611797565b9182905550604080516020808201939093529081018890528951600390810b6060830152918a015190910b60808201524460a082015260c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090506107cb6005826117cf565b6000036107dd576107db86610d41565b505b505b5050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610859576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108628161111f565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261091b91908101906117e3565b90508051600003610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610270565b6109a98160008151811061099e5761099e611889565b602002602001015190565b949350505050565b600080826000015160030b846000015160030b136109dc57835183516109d791906118b8565b6109ea565b825184516109ea91906118b8565b90506000836020015160030b856020015160030b13610a1c5784602001518460200151610a1791906118b8565b610a30565b83602001518560200151610a3091906118b8565b9050610a3c81836116dd565b95945050505050565b604080516002808252606082810190935260009190816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610a5f57905050604080516060810190915290915080600281526020017f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c815260200184604051602001610ade9190611929565b60405160208183030381529060405281525081600081518110610b0357610b03611889565b6020908102919091010152604080516060810190915280600081527fd703888970216b9e7638d070dffe76bfc96703764185f5bf28908d52098f3557602082015260400160005b6040519080825280601f01601f191660200182016040528015610b74576020820181803683370190505b5081525081600181518110610b8b57610b8b611889565b60209081029190910101526040517f687485a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063687485a690610be890849060040161194a565b600060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109a991908101906117e3565b60008054610c8f9073ffffffffffffffffffffffffffffffffffffffff167fc21082728a9fccb6fd1e9d68c7593b100c0c10579766b623a82bd937949f64d3610865565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e846040518263ffffffff1660e01b8152600401610cc991815260200190565b602060405180830381865afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a91906115a9565b8015610d3a5750600154600090610d379073ffffffffffffffffffffffffffffffffffffffff1684611128565b51115b9392505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd591906119f9565b6000805491925090610e1d9073ffffffffffffffffffffffffffffffffffffffff167fce3cf5e60d6c466c18a0c94c2578092629e99bd45d1ae7462b45c6a485bc1150610865565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018690526024810184905290915073ffffffffffffffffffffffffffffffffffffffff821690631ab06ee590604401600060405180830381600087803b158015610e8f57600080fd5b505af1158015610ea3573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3a91906119f9565b90506000600260008154610f4d90611797565b9182905550604080516020810192909252810187905260608101859052608081018390524460a082015260c001604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012090506000610fbf6003836117cf565b610fca906001611a12565b6003811115610fdb57610fdb6118fa565b6000549091506110219073ffffffffffffffffffffffffffffffffffffffff167f7fb82f1e56a904d7470251c6c92a4c9051fc76b75c115a6b20bdeaba7333417a610865565b73ffffffffffffffffffffffffffffffffffffffff1663f419df7284836040518363ffffffff1660e01b815260040161105b929190611a25565b600060405180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b50506040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018690526024810188905273ffffffffffffffffffffffffffffffffffffffff87169250631ab06ee59150604401600060405180830381600087803b1580156110fc57600080fd5b505af1158015611110573d6000803e3d6000fd5b50969998505050505050505050565b61086281611231565b604080516002808252606082810190935260009190816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161114257905050604080516060810190915290915080600281526020017f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c8152602001846040516020016111c19190611929565b604051602081830303815290604052815250816000815181106111e6576111e6611889565b6020908102919091010152604080516060810190915280600081527f2c3288ca1ff907751eeb8ba027e9668d154fef6e9e1dd5a6908289a9e7eb177860208201526040016000610b4a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561132f5761132f6112dd565b60405290565b6040516060810167ffffffffffffffff8111828210171561132f5761132f6112dd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561139f5761139f6112dd565b604052919050565b600067ffffffffffffffff8211156113c1576113c16112dd565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156113ff57600080fd5b813567ffffffffffffffff81111561141657600080fd5b8201601f8101841361142757600080fd5b803561143a611435826113a7565b611358565b81815285602083850101111561144f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015611488578181015183820152602001611470565b50506000910152565b600081518084526114a981602086016020860161146d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610d3a6020830184611491565b8060030b811461086257600080fd5b60006040828403121561150f57600080fd5b61151761130c565b8235611522816114ee565b81526020830135611532816114ee565b60208201529392505050565b60006020828403121561155057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610d3a57600080fd5b60006040828403121561158657600080fd5b61158e61130c565b8251611599816114ee565b81526020830151611532816114ee565b6000602082840312156115bb57600080fd5b81518015158114610d3a57600080fd5b805163ffffffff811681146115df57600080fd5b919050565b600060208083850312156115f757600080fd5b825167ffffffffffffffff8082111561160f57600080fd5b908401906060828703121561162357600080fd5b61162b611335565b611634836115cb565b81526116418484016115cb565b8482015260408301518281111561165757600080fd5b80840193505086601f84011261166c57600080fd5b8251915061167c611435836113a7565b828152878584860101111561169057600080fd5b61169f8386830187870161146d565b60408201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000821217156100e8576100e86116ae565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008260030b806117615761176161171f565b808360030b0791505092915050565b82815260608101610d3a6020830184805160030b8252602081015160030b60208301525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117c8576117c86116ae565b5060010190565b6000826117de576117de61171f565b500690565b600060208083850312156117f657600080fd5b825167ffffffffffffffff8082111561180e57600080fd5b818501915085601f83011261182257600080fd5b815181811115611834576118346112dd565b8060051b9150611845848301611358565b818152918301840191848101908884111561185f57600080fd5b938501935b8385101561187d57845182529385019390850190611864565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600382810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff821317156100e8576100e86116ae565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b604081016100e88284805160030b8252602081015160030b60208301525050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156119eb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160608151600681106119b6576119b66118fa565b8552818901518986015290870151878501829052906119d781860183611491565b968901969450505090860190600101611971565b509098975050505050505050565b600060208284031215611a0b57600080fd5b5051919050565b808201808211156100e8576100e86116ae565b8281526040810160048310611a3c57611a3c6118fa565b826020830152939250505056fea2646970667358221220e7ef1930b70c70894de5aa1d8c224534247c0b255fc1feac85ae25193c3f7d3f64736f6c63430008130033";

type MoveSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoveSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoveSystem__factory extends ContractFactory {
  constructor(...args: MoveSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MoveSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MoveSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MoveSystem {
    return super.attach(address) as MoveSystem;
  }
  override connect(signer: Signer): MoveSystem__factory {
    return super.connect(signer) as MoveSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoveSystemInterface {
    return new utils.Interface(_abi) as MoveSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoveSystem {
    return new Contract(address, _abi, signerOrProvider) as MoveSystem;
  }
}
